name: build and publish

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

env:
  ECR_REPO: public.ecr.aws/l5k6t5t7/cicd-images
  DH_REPO: govtechsg/cicd-images
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}

jobs:
  lint:
    runs-on: ubuntu-latest
    name: lint
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - run: docker run --rm -i hadolint/hadolint < ./ansible/Dockerfile
  alpine:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: alpine
    name: alpine
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install dependencies
        uses: ./.github/actions/install-dep
      - name: Dockerhub login
        run: docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_PASSWORD }};
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  ansible:
    env:
      IMAGE_NAME: ansible
    runs-on: ubuntu-latest
    name: ansible
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install dependencies
        uses: ./.github/actions/install-dep
      - name: Dockerhub login
        run: docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_PASSWORD }};
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  awscli:
    env:
      IMAGE_NAME: awscli
    runs-on: ubuntu-latest
    name: awscli
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install dependencies
        uses: ./.github/actions/install-dep
      - name: Dockerhub login
        run: docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_PASSWORD }};
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  chrome-oracle-py:
    env:
      IMAGE_NAME: chrome-oracle-py
    runs-on: ubuntu-latest
    name: chrome-oracle-py
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install dependencies
        uses: ./.github/actions/install-dep
      - name: Dockerhub login
        run: docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_PASSWORD }};
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  cypress:
    env:
      IMAGE_NAME: cypress
    runs-on: ubuntu-latest
    name: cypress
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install dependencies
        uses: ./.github/actions/install-dep
      - name: Dockerhub login
        run: docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_PASSWORD }};
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  dephash:
    env:
      IMAGE_NAME: dephash
    runs-on: ubuntu-latest
    name: dephash
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install dependencies
        uses: ./.github/actions/install-dep
      - name: Dockerhub login
        run: docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_PASSWORD }};
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  dind:
    env:
      IMAGE_NAME: dind
    runs-on: ubuntu-latest
    name: dind
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install dependencies
        uses: ./.github/actions/install-dep
      - name: Dockerhub login
        run: docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_PASSWORD }};
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force
]
  gkecli:
    env:
      IMAGE_NAME: gkecli
    runs-on: ubuntu-latest
    name: gkecli
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install dependencies
        uses: ./.github/actions/install-dep
      - name: Dockerhub login
        run: docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_PASSWORD }};
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  karma:
    env:
      IMAGE_NAME: karma
    runs-on: ubuntu-latest
    name: karma
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install dependencies
        uses: ./.github/actions/install-dep
      - name: Dockerhub login
        run: docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_PASSWORD }};
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  kubectl:
    env:
      IMAGE_NAME: kubectl
    runs-on: ubuntu-latest
    name: kubectl
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install dependencies
        uses: ./.github/actions/install-dep
      - name: Dockerhub login
        run: docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_PASSWORD }};
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        uses: ./.github/actions/build-and-publish-force

  node:
    env:
      IMAGE_NAME: node
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [8.x, 10.x, 12.x]
    name: node
    steps:
      - uses: actions/checkout@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Install dependencies
        uses: ./.github/actions/install-dep
      - name: Dockerhub login
        run: docker login -u ${{ secrets.DH_USERNAME }} -p ${{ secrets.DH_PASSWORD }};
      - name: ECR public login
        run: /usr/local/bin/aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      - name: Build and Publish
        if: "!contains(github.event.head_commit.message, '[force build]')"
        with:
          BUILD_ARGS: ${{ matrix.node-version }}
        uses: ./.github/actions/build-and-publish
      - name: Build and Publish (force)
        if: "contains(github.event.head_commit.message, '[force build]')"
        with:
          BUILD_ARGS: ${{ matrix.node-version }}
        uses: ./.github/actions/build-and-publish-force
